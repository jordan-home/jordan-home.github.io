(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{520:function(v,_,t){"use strict";t.r(_);var l=t(7),a=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("书籍简介")]),t("p",[v._v("书名：代码整洁之道\n作者：John Schember\n分类：IT")])]),v._v(" "),t("h2",{attrs:{id:"chapter1-整洁代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chapter1-整洁代码"}},[v._v("#")]),v._v(" Chapter1 整洁代码")]),v._v(" "),t("ol",[t("li",[v._v("勒布朗（LeBlanc）法则：稍后等于永不（Later equals never）")]),v._v(" "),t("li",[v._v("混乱的代价：对代码的每次修改都影响到其他两三处代码。修改无小事。每次添加或修改代码，都得对那堆扭纹柴了然于心，这样才能往上扔更多的扭纹柴。这团乱麻越来越大，再也无法理清，最后束手无策。")]),v._v(" "),t("li",[v._v("医生如果按病人说的办，就是一种不专业的态度（更别说是犯罪了）。\n同理，程序员遵从不了解混乱风险的经理的意愿，也是不专业的做法。")]),v._v(" "),t("li",[v._v("不读周边代码的话就没法写代码。编写代码的难度，取决于读周边代码的难度。")]),v._v(" "),t("li",[v._v("光把代码写好可不够。必须时时"),t("em",[v._v("保持代码整洁")]),v._v(" 。我们都见过代码随时间流逝而腐坏。我们应当更积极地阻止腐坏的发生。")])]),v._v(" "),t("h2",{attrs:{id:"chapter2-有意义的命名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chapter2-有意义的命名"}},[v._v("#")]),v._v(" Chapter2 有意义的命名")]),v._v(" "),t("p",[v._v("取好名字的几个规则：")]),v._v(" "),t("ul",[t("li",[v._v("名副其实：一旦发现有更好的名称，就换掉旧的；如果需要注释补充就不够名副其实，结合上下文")]),v._v(" "),t("li",[v._v("避免误导")]),v._v(" "),t("li",[v._v("做有意义的区分，而非只是为了满足编辑器和解释器的需要，比如a1,a2")]),v._v(" "),t("li",[v._v("可读的名称")]),v._v(" "),t("li",[v._v("使用可搜索的名称")]),v._v(" "),t("li",[v._v("避免使用编码，增加了解码的负担，如 匈牙利语标记法 和 成员前缀_dd")]),v._v(" "),t("li",[v._v("避免思维映射")]),v._v(" "),t("li",[v._v("类名、对象名要求名词或名词短语；方法名要求动词或动词短语；属性相关应该加上get,set或is前缀。")]),v._v(" "),t("li",[v._v("名字必须明确，易懂")]),v._v(" "),t("li",[v._v("给每个抽象概念选一个词，并且一以贯之，如getXXX,fetchYYY,等。")]),v._v(" "),t("li",[v._v("技术性的名称有时候更好，因为写代码看代码的都是技术人")]),v._v(" "),t("li",[v._v("或者根据业务、问题、语境来命名")])]),v._v(" "),t("h2",{attrs:{id:"chapter3-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chapter3-函数"}},[v._v("#")]),v._v(" Chapter3 函数")]),v._v(" "),t("ol",[t("li",[v._v("要短小，每个函数都只说一件事，每个函数都依序带到下一个函数，函数的缩进层级不该多于一层或两层")]),v._v(" "),t("li",[v._v("只做一件事情的函数很难再合理的切分")]),v._v(" "),t("li",[v._v("每个函数一个抽象层。自顶向下读代码")]),v._v(" "),t("li",[v._v("注意switch语句，天生做好几件事，最好放到底层，其他部分不容易看到")]),v._v(" "),t("li",[v._v("使用描述性名称。别害怕名字长，别害怕花时间。命名要一脉相承，符合统一的规则")]),v._v(" "),t("li",[v._v("函数参数。参数越少越好。")]),v._v(" "),t("li",[v._v("标识参数很丑，不要传布尔值，否则意味着函数一定做了几件事")]),v._v(" "),t("li",[v._v("如果函数必须要多个参数，可以考虑封装成对象、类了")]),v._v(" "),t("li",[v._v("一元函数：函数名（动词或动词短语）+ 参数（名词）")]),v._v(" "),t("li",[v._v("抽离try…catch,把代码块主体抽离出来，另外一个函数。错误处理本身就是一件事了")]),v._v(" "),t("li",[v._v("别重复代码")]),v._v(" "),t("li",[v._v("好的函数写法是改出来的")])]),v._v(" "),t("h2",{attrs:{id:"chapter4-注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chapter4-注释"}},[v._v("#")]),v._v(" Chapter4 注释")]),v._v(" "),t("ol",[t("li",[v._v("注释是在无法清晰表达时的一种补救措施。注释存在时间越久，就越不可靠。因为代码会随着时间变动，而注释没有及时更新")]),v._v(" "),t("li",[v._v("清晰的代码比注释更重要")]),v._v(" "),t("li",[v._v("注释：阐释返回值和参数的意义，表达意图，警示，TODO等")])]),v._v(" "),t("h2",{attrs:{id:"chapter5-格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chapter5-格式"}},[v._v("#")]),v._v(" Chapter5 格式")]),v._v(" "),t("ol",[t("li",[v._v("好的代码格式有利于阅读和修改")]),v._v(" "),t("li",[v._v("单个文件代码行数应该少")]),v._v(" "),t("li",[v._v("从上到下的结构秩序")]),v._v(" "),t("li",[v._v("每一个块间有空行隔开")]),v._v(" "),t("li",[v._v("相关的代码块应该彼此相近")]),v._v(" "),t("li",[v._v("一行代码长度应该短")]),v._v(" "),t("li",[v._v("适当的缩进")])]),v._v(" "),t("h2",{attrs:{id:"chapter6-如何学习、使用第三方代码-库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chapter6-如何学习、使用第三方代码-库"}},[v._v("#")]),v._v(" Chapter6 如何学习、使用第三方代码/库？")]),v._v(" "),t("p",[v._v("学习性测试：编写测试用例来熟悉理解第三方代码")]),v._v(" "),t("h2",{attrs:{id:"chapter7-可能的坏味道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chapter7-可能的坏味道"}},[v._v("#")]),v._v(" Chapter7 可能的坏味道")]),v._v(" "),t("ol",[t("li",[v._v("注释")])]),v._v(" "),t("ul",[t("li",[v._v("不恰当的信息")]),v._v(" "),t("li",[v._v("废弃的注释")]),v._v(" "),t("li",[v._v("冗余的注释")]),v._v(" "),t("li",[v._v("糟糕的注释")]),v._v(" "),t("li",[v._v("注释掉的代码")])]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[v._v("环境")])]),v._v(" "),t("ul",[t("li",[v._v("构建代码的命令应该尽可能少短")]),v._v(" "),t("li",[v._v("进行测试的指令也应该少")])]),v._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[v._v("函数")])]),v._v(" "),t("ul",[t("li",[v._v("参数太多")]),v._v(" "),t("li",[v._v("标志参数")]),v._v(" "),t("li",[v._v("死函数（不被调用的函数）")])]),v._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[v._v("一般性问题")])]),v._v(" "),t("ul",[t("li",[v._v("忽视安全")]),v._v(" "),t("li",[v._v("重复")]),v._v(" "),t("li",[v._v("死代码（不执行的代码）")]),v._v(" "),t("li",[v._v("用常量代替魔术数")])]),v._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[v._v("名称")]),v._v(" "),t("li",[v._v("测试")]),v._v(" "),t("li",[v._v("etc")])])])}),[],!1,null,null,null);_.default=a.exports}}]);